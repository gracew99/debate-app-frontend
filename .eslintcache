[{"/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/index.js":"1","/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/App.js":"2","/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/axios.js":"3","/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/components/DebateDetails.jsx":"4","/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/components/DebateTopicList.jsx":"5","/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/components/DebateCardList.jsx":"6","/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/components/DebateCard.jsx":"7","/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/components/DebateTopic.jsx":"8","/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/components/Home.jsx":"9","/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/components/DebateCreation.jsx":"10","/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/components/DebateRegister.jsx":"11"},{"size":476,"mtime":1611172975767,"results":"12","hashOfConfig":"13"},{"size":1779,"mtime":1611173040022,"results":"14","hashOfConfig":"13"},{"size":128,"mtime":1611039862915,"results":"15","hashOfConfig":"13"},{"size":1578,"mtime":1611172220710,"results":"16","hashOfConfig":"13"},{"size":852,"mtime":1611171951749,"results":"17","hashOfConfig":"13"},{"size":1160,"mtime":1611173948595,"results":"18","hashOfConfig":"13"},{"size":737,"mtime":1611173662786,"results":"19","hashOfConfig":"13"},{"size":623,"mtime":1611173790043,"results":"20","hashOfConfig":"13"},{"size":634,"mtime":1611173962841,"results":"21","hashOfConfig":"13"},{"size":3254,"mtime":1611171876932,"results":"22","hashOfConfig":"13"},{"size":209,"mtime":1611103156853,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y8xfg1",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/index.js",[],"/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/App.js",[],"/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/axios.js",[],["49","50"],"/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/components/DebateDetails.jsx",["51"],"import React, { useState, useEffect} from 'react';\nimport {useParams} from \"react-router-dom\"\nimport axios from '../axios'\n\nfunction DebateDetails(props) {\n    // WARNING: must assign to exact param name from Route path \n    let { topicid, title } = useParams();\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        async function getDebates() {\n            const url = '/v2/posts/'+topicid+\"/\"+title;\n            console.log(\"getting posts \" + url);\n\n            const response = await axios.get(url);\n            setPosts(response.data);\n            return response;\n        }\n        getDebates();\n    }, [])\n    \n    return (\n        <div>\n        {posts.map(post => \n            <div className={\"debateDetail\"} style={{backgroundColor:props.colors[0]}}>\n                <h2>{\"Title: \" + post.title}</h2>\n\n                <h2>{post.person1 + \" vs. \" + post.person2}</h2>\n                <img src={post.person1img} class=\"profilepic\" alt=\"person1\"></img>\n                <img src={post.person2img} class=\"profilepic\" alt=\"person2\"></img>\n                <h2>{post.topic}</h2>\n                <p>{post.date}</p>\n                <h2 className={\"meet\"}>{\"Meet \" + post.person1.split(\" \")[0]}</h2>\n                <p className={\"bio\"}>{post.person1description}</p>\n                <h2 className={\"meet\"}>{\"Meet \" + post.person2.split(\" \")[0]}</h2>\n                <p className={\"bio\"}>{post.person2description}</p>\n                <a href=\"register\"> Register </a>\n            </div>\n        )}\n        </div>\n        \n    )\n}\n\nexport default DebateDetails\n","/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/components/DebateTopicList.jsx",["52"],"import React, { useState, useEffect } from 'react'\nimport DebateTopic from './DebateTopic'\nimport axios from '../axios'\n\nfunction DebateTopicList(props) {\n    let i = 0;\n    const len = props.colors.length;\n\n    const [topics, setTopics] = useState([]);\n\n    useEffect(() => {\n        async function getDebates() {\n            const response = await axios.get('/v2/topics');\n            setTopics(response.data);\n            return response;\n        }\n        getDebates();\n    }, [])\n    \n\n    return (\n        <div>\n            <h2 className=\"pageTitle\"> Here are the upcoming debate topics. Select a tile to view specific debates.</h2>\n            {topics.map((topic) => {\n                    return <DebateTopic topic={topic} color={props.colors[(i++)%3]} /> \n                }\n            )}\n        </div>\n    )\n}\n\nexport default DebateTopicList\n","/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/components/DebateCardList.jsx",["53"],"/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/components/DebateCard.jsx",[],"/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/components/DebateTopic.jsx",[],"/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/components/Home.jsx",[],"/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/components/DebateCreation.jsx",[],"/Users/gracew/Desktop/Web Dev/debate-app/debate-frontend/src/components/DebateRegister.jsx",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":20,"column":8,"nodeType":"60","endLine":20,"endColumn":10,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":7,"column":11,"nodeType":"64","messageId":"65","endLine":7,"endColumn":14},{"ruleId":"58","severity":1,"message":"66","line":18,"column":8,"nodeType":"60","endLine":18,"endColumn":10,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'title' and 'topicid'. Either include them or remove the dependency array.","ArrayExpression",["70"],"no-unused-vars","'len' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["71"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},"Update the dependencies array to be: [title, topicid]",{"range":"76","text":"77"},"Update the dependencies array to be: [id]",{"range":"78","text":"79"},[630,632],"[title, topicid]",[557,559],"[id]"]